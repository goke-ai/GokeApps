//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Goke.Web.Entities
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;
    // using Microsoft.EntityFrameworkCore;
    
    public partial class Person : BaseEntity
    {
        public Person() : base()
        {
            this.Followeds = new HashSet<Follow>();
            this.Followers = new HashSet<Follow>();
    		Initialize();
        }
    	partial void Initialize();
    
        [Required(ErrorMessage = "The Surname is a mandatory Field.")]
    	[Display(Name = "Surname")]
    	public string Surname { get; set; }
        [Required(ErrorMessage = "The Firstname is a mandatory Field.")]
    	[Display(Name = "Firstname")]
    	public string Firstname { get; set; }
        [Display(Name = "Middlename")]
    	public string Middlename { get; set; }
        [Required(ErrorMessage = "The Gender is a mandatory Field.")]
    	[Display(Name = "Gender")]
    	public Gender Gender { get; set; }
        [DataType(DataType.Date)]
    	[DisplayFormat(DataFormatString = "{0:yyyy-MM-dd}", ApplyFormatInEditMode = true)]
    	[Display(Name = "Birthdate")]
    	public Nullable<System.DateTime> Birthdate { get; set; }
    
        [InverseProperty("Followed")]
    	public virtual ICollection<Follow> Followeds { get; set; }
        [InverseProperty("Follower")]
    	public virtual ICollection<Follow> Followers { get; set; }
        
        public new string ToRecord()
        {
            var str = $@"Person {{ 
                {base.ToRecord()},
                Surname = {Surname}, 
                Firstname = {Firstname}, 
                Middlename = {Middlename}, 
                Gender = {Gender}, 
                Birthdate = {Birthdate}, 
                Followeds = Count[{Followeds?.Count}]|{Followeds?.ToString()},
                Followers = Count[{Followers?.Count}]|{Followers?.ToString()},
            ";
         
            OnToRecord(ref str);
    
            str += "}}";
    
            return str;
        }
    
        partial void OnToRecord(ref string str);
            
    
        string ToJson()
        {
            return System.Text.Json.JsonSerializer.Serialize(this);
        }
    
    
    }
}
