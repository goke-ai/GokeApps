//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Goke.Core.Enttities
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;
    // using Microsoft.EntityFrameworkCore;
    
    public partial class Card : BaseEntity
    {
        public Card() : base()
        {
    		Initialize();
        }
    	partial void Initialize();
    
        [Required(ErrorMessage = "The Pin is a mandatory Field.")]
    	[Display(Name = "Pin")]
    	public string Pin { get; set; }
        [Display(Name = "Permissions")]
    	public byte Permissions { get; set; }
        [Required(ErrorMessage = "The From is a mandatory Field.")]
    	[DataType(DataType.Date)]
    	[DisplayFormat(DataFormatString = "{0:yyyy-MM-dd}", ApplyFormatInEditMode = true)]
    	[Display(Name = "From")]
    	public System.DateTime From { get; set; }
        [Required(ErrorMessage = "The To is a mandatory Field.")]
    	[DataType(DataType.Date)]
    	[DisplayFormat(DataFormatString = "{0:yyyy-MM-dd}", ApplyFormatInEditMode = true)]
    	[Display(Name = "To")]
    	public System.DateTime To { get; set; }
        [Display(Name = "Pin User")]
    	public string? PinUser { get; set; }
    
        public virtual Payment? Payment { get; set; }
        
        public new string ToRecord()
        {
            var str = $@"Card {{ 
                {base.ToRecord()},
                Pin = {Pin}, 
                Permissions = {Permissions}, 
                From = {From}, 
                To = {To}, 
                PinUser = {PinUser}, 
                Payment = {Payment.ToRecord()},
            ";
         
            OnToRecord(ref str);
    
            str += "}}";
    
            return str;
        }
    
        partial void OnToRecord(ref string str);
            
    
        public string ToJson()
        {
            return System.Text.Json.JsonSerializer.Serialize(this);
        }
    
        public Card? FromJson(string json)
        {
            if (json == null)
                return null;
    
            return System.Text.Json.JsonSerializer.Deserialize<Card>(json);
        }
    
    
    }
}
