//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated from a template.
//
//     Manual changes to this file may cause unexpected behavior in your application.
//     Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Goke.Core.Enttities
{
    using System;
    using System.Collections.Generic;
    using System.ComponentModel.DataAnnotations;
    using System.ComponentModel.DataAnnotations.Schema;
    // using Microsoft.EntityFrameworkCore;
    
    public partial class Payment : BaseEntity
    {
        public Payment() : base()
        {
    		Initialize();
        }
    	partial void Initialize();
    
        [Required(ErrorMessage = "The Date is a mandatory Field.")]
    	[DataType(DataType.Date)]
    	[DisplayFormat(DataFormatString = "{0:yyyy-MM-dd}", ApplyFormatInEditMode = true)]
    	[Display(Name = "Date")]
    	public System.DateTime Date { get; set; }
        [Required(ErrorMessage = "The Reference is a mandatory Field.")]
    	[Display(Name = "Reference")]
    	public string Reference { get; set; }
        [Required(ErrorMessage = "The Paid By is a mandatory Field.")]
    	[Display(Name = "Paid By")]
    	public string PaidBy { get; set; }
        [DisplayFormat(DataFormatString = "{0:#,#0.00}")]
    	[Display(Name = "Amount")]
    	public decimal Amount { get; set; }
        [Required(ErrorMessage = "The Status is a mandatory Field.")]
    	[Display(Name = "Status")]
    	public PaymentStatus Status { get; set; }
        [Display(Name = "Details")]
    	public string? Details { get; set; }
    
        public virtual Card? Card { get; set; }
        
        public new string ToRecord()
        {
            var str = $@"Payment {{ 
                {base.ToRecord()},
                Date = {Date}, 
                Reference = {Reference}, 
                PaidBy = {PaidBy}, 
                Amount = {Amount}, 
                Status = {Status}, 
                Details = {Details}, 
                Card = {Card.ToRecord()},
            ";
         
            OnToRecord(ref str);
    
            str += "}}";
    
            return str;
        }
    
        partial void OnToRecord(ref string str);
            
    
        public string ToJson()
        {
            return System.Text.Json.JsonSerializer.Serialize(this);
        }
    
        public Payment? FromJson(string json)
        {
            if (json == null)
                return null;
    
            return System.Text.Json.JsonSerializer.Deserialize<Payment>(json);
        }
    
    
    }
}
