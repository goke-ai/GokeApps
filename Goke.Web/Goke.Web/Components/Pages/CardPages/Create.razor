@page "/cards/create"
@using Microsoft.AspNetCore.Authorization
@using Microsoft.EntityFrameworkCore
@using Goke.Core.Entities
@inject IDbContextFactory<ApplicationDbContext> DbFactory
@inject NavigationManager NavigationManager

@attribute [Authorize(Roles = "SystemAdministrators, Administrators")]

<PageTitle>Create</PageTitle>

<h1>Create</h1>

<h2>Card</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <EditForm method="post" Model="Card" OnValidSubmit="AddCard" FormName="create" Enhance>
            <DataAnnotationsValidator />
            <ValidationSummary class="text-danger" />
            <div class="mb-3">
                <label for="pin" class="form-label">Pin:</label> 
                <InputText id="pin" @bind-Value="Card.Pin" class="form-control" /> 
                <ValidationMessage For="() => Card.Pin" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="from" class="form-label">From:</label> 
                <InputDate id="from" @bind-Value="Card.From" class="form-control" /> 
                <ValidationMessage For="() => Card.From" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="to" class="form-label">To:</label> 
                <InputDate id="to" @bind-Value="Card.To" class="form-control" /> 
                <ValidationMessage For="() => Card.To" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="permission" class="form-label">Permission:</label> 
                <InputNumber id="permission" @bind-Value="Card.Permission" class="form-control" /> 
                <ValidationMessage For="() => Card.Permission" class="text-danger" /> 
            </div>        
            @* <div class="mb-3">
                <label for="userdetailid" class="form-label">UserDetailId:</label> 
                <InputText id="userdetailid" @bind-Value="Card.UserDetailId" class="form-control" /> 
                <ValidationMessage For="() => Card.UserDetailId" class="text-danger" /> 
            </div>   *@      
            <div class="mb-3">
                <label for="lastby" class="form-label">LastBy:</label> 
                <InputText id="lastby" @bind-Value="Card.LastBy" class="form-control" /> 
                <ValidationMessage For="() => Card.LastBy" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="lastdate" class="form-label">LastDate:</label> 
                <InputDate id="lastdate" @bind-Value="Card.LastDate" class="form-control" /> 
                <ValidationMessage For="() => Card.LastDate" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="addedby" class="form-label">AddedBy:</label> 
                <InputText id="addedby" @bind-Value="Card.AddedBy" class="form-control" /> 
                <ValidationMessage For="() => Card.AddedBy" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="addeddate" class="form-label">AddedDate:</label> 
                <InputDate id="addeddate" @bind-Value="Card.AddedDate" class="form-control" /> 
                <ValidationMessage For="() => Card.AddedDate" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="editedby" class="form-label">EditedBy:</label> 
                <InputText id="editedby" @bind-Value="Card.EditedBy" class="form-control" /> 
                <ValidationMessage For="() => Card.EditedBy" class="text-danger" /> 
            </div>        
            <div class="mb-3">
                <label for="editeddate" class="form-label">EditedDate:</label> 
                <InputDate id="editeddate" @bind-Value="Card.EditedDate" class="form-control" /> 
                <ValidationMessage For="() => Card.EditedDate" class="text-danger" /> 
            </div>        
             
            <button type="submit" class="btn btn-primary">Create</button>
        </EditForm>
    </div>
</div>

<div>
    <a href="/cards">Back to List</a>
</div>

@code {
    [SupplyParameterFromForm]
    private Card Card { get; set; } = new();

    // To protect from overposting attacks, see https://learn.microsoft.com/aspnet/core/blazor/forms/#mitigate-overposting-attacks.
    private async Task AddCard()
    {
        using var context = DbFactory.CreateDbContext();
        context.Cards.Add(Card);
        await context.SaveChangesAsync();
        NavigationManager.NavigateTo("/cards");
    }
}
